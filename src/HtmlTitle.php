<?php

namespace Simphotonics\Node;

use Simphotonics\Node\HtmlLeaf;
use Simphotonics\Utils\WebUtils;

/**
 * @author D Reschner <d.reschner@simphotonics.com>
 * @copyright 2015 Simphotonics
 * Description: Extends class HtmlLeaf adding support
 * for dynamics web page titles.
 * The title string is generated using the variable
 * $_SERVER['REQUEST_URI] and the (optional) domain name.
 * Usage:
 *     $title = new HtmlTitle('My Site') called from aboutUs.php
 *     yields the web page title: 'My Site - About Us' .
 *     Nota bene: Word division using camel case is assumed!
 */
class HtmlTitle extends HtmlLeaf
{
    /**
     *  Constant used in @see split() to enable upper
     *  case titles.
     */
    const ALL_TO_UPPER_CASE = true;

    /**
     * Constant used in @see split() to make the first
     * character in each title word upper case.
     */
    const FIRST_TO_UPPER_CASE = false;

    /**
     * Constructs HtmlTitle object
     * @param string $domainName  Prefix used to generate web page title.
     * @param string $titleString Overwrites autogenerated titles.
     * @param const  $flag        Formats autogenerated titles.
     */
    public function __construct(
        $domainName = 'DEFAULT DOMAIN',
        $titleString = 'Default Title',
        $flag = self::FIRST_TO_UPPER_CASE
    ) {
        switch (func_num_args()) {
            case 0:
                $titleString = self::getTitle($flag);
                break;
            case 1:
                $titleString = $domainName . " - " . self::getTitle($flag);
                break;
            default:
                $titleString = $domainName . " - " . $titleString;
                break;
        }
        parent::__construct(
            kind: 'title',
            content: $titleString
        );
    }

    /**
     * Generates web page title.
     * @param  string $filename [description]
     * @param  [type] $flag     [description]
     * @return [type]           [description]
     */
    private static function getTitle($flag)
    {
        $filename = WebUtils::baseURI();
        return self::formatTitle($filename, $flag);
    }

    /**
     * Converts camel-case and "-" and "_" to spaces.
     * @param  string $title Web site title in camel-cases.
     * @param  const $flag   Formats title.
     * @return string        Formatted website title.
     */
    private static function formatTitle($title, $flag = self::FIRST_TO_UPPER_CASE)
    {
        // Set web site title to 'Home' for uri index (index.php) or ''.
        if (strtolower($title) == 'index' or $title == '') {
            return ($flag) ? 'HOME' : 'Home';
        }
        //
        $pattern = '@
            (
                # Zero width match.
                # Credit: http://www.rexegg.com/regex-lookarounds.html#camelinsert
                (?<=[a-z])(?=[A-Z])|
                # Split at underscore
                _|
                # Split at minus
                -
            )@x';
        $titleString = preg_replace($pattern, ' ', $title);

        // Apply format flags
        return ($flag) ? strtoupper($titleString) : ucwords($titleString);
    }
}
